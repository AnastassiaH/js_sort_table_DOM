{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","nav","firstElementChild","rawRows","children","sortRows","arr","index","sort","a","b","valueA","textContent","valueB","Number","parseInt","slice","addEventListener","e","sortBy","target","targetIndex","indexOf","sortedRows","i","length","append"],"mappings":";AAAA,aAuBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAMH,EAAMI,kBACZC,EAAcL,EAAAA,EAAMM,SAAS,GAAGA,UAEhCC,EAAW,SAACC,EAAKC,GACdD,OAAAA,EAAIE,KAAK,SAACC,EAAGC,GACZC,IAAAA,EAASF,EAAEL,SAASG,GAAOK,YAC3BC,EAASH,EAAEN,SAASG,GAAOK,YAEzBL,OAAAA,GACD,KAAA,EACII,OAAAA,EAASE,EACb,KAAA,EACIC,OAAAA,OAAOC,SAASJ,EAAOK,MAAM,IAClCF,OAAOC,SAASF,EAAOG,MAAM,IACjC,QACSL,OAAAA,EAASE,EAAS,EAAIF,EAASE,GAAU,EAAI,MAK5DZ,EAAIgB,iBAAiB,QAAS,SAACC,GAMxB,IALCC,IAAAA,EAASD,EAAEE,OACXC,EAAc,EAAIpB,EAAIC,kBAAkBE,UAAUkB,QAAQH,GAE1DI,EAAalB,EAAaF,EAAAA,GAAUkB,GAEjCG,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IACrC1B,EAAMM,SAAS,GAAGsB,OAAOH,EAAWC","file":"main.3fb07e85.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst nav = table.firstElementChild;\nconst rawRows = [...table.children[1].children];\n\nconst sortRows = (arr, index) => {\n  return arr.sort((a, b) => {\n    const valueA = a.children[index].textContent;\n    const valueB = b.children[index].textContent;\n\n    switch (index) {\n      case 2:\n        return valueA - valueB;\n      case 3:\n        return Number.parseInt(valueA.slice(1))\n        - Number.parseInt(valueB.slice(1));\n      default:\n        return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n    }\n  });\n};\n\nnav.addEventListener('click', (e) => {\n  const sortBy = e.target;\n  const targetIndex = [...nav.firstElementChild.children].indexOf(sortBy);\n\n  const sortedRows = sortRows([...rawRows], targetIndex);\n\n  for (let i = 0; i < sortedRows.length; i++) {\n    table.children[1].append(sortedRows[i]);\n  }\n});\n"]}